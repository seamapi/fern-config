types:
  CredentialProvisioningAutomationsLaunchResponseAcsCredentialProvisioningAutomation:
    properties:
      acs_credential_provisioning_automation_id: string
      credential_manager_acs_system_id: string
      user_identity_id: string
      created_at: datetime
      workspace_id: string
  CredentialProvisioningAutomationsLaunchResponse:
    properties:
      acs_credential_provisioning_automation: >-
        CredentialProvisioningAutomationsLaunchResponseAcsCredentialProvisioningAutomation
      ok: boolean
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    launch:
      path: /acs/credential_provisioning_automations/launch
      method: POST
      auth: true
      display-name: /acs/credential_provisioning_automations/launch
      request:
        name: CredentialProvisioningAutomationsLaunchRequest
        body:
          properties:
            user_identity_id: string
            credential_manager_acs_system_id: string
            acs_credential_pool_id: optional<string>
            create_credential_manager_user: optional<boolean>
            credential_manager_acs_user_id: optional<string>
      response:
        docs: OK
        type: CredentialProvisioningAutomationsLaunchResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            user_identity_id: user_identity_id
            credential_manager_acs_system_id: credential_manager_acs_system_id
          response:
            body:
              acs_credential_provisioning_automation:
                acs_credential_provisioning_automation_id: acs_credential_provisioning_automation_id
                credential_manager_acs_system_id: credential_manager_acs_system_id
                user_identity_id: user_identity_id
                created_at: '2024-01-15T09:30:00Z'
                workspace_id: workspace_id
              ok: true
