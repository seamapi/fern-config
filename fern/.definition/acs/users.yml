types:
  UsersAddToAccessGroupResponse:
    properties:
      ok: boolean
  UsersCreateRequestAccessSchedule:
    properties:
      starts_at: datetime
      ends_at: datetime
  UsersCreateResponse:
    properties:
      acs_user: root.AcsUser
      ok: boolean
  UsersDeleteResponse:
    properties:
      ok: boolean
  UsersGetResponse:
    properties:
      acs_user: root.AcsUser
      ok: boolean
  UsersListResponse:
    properties:
      acs_users: list<root.AcsUser>
      ok: boolean
  UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataDoorCategory:
    enum:
      - entrance
      - guest
      - value: elevator reader
        name: ElevatorReader
      - common
      - value: common (PMS)
        name: CommonPms
  UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataProfilesItemVisionlineDoorProfileType:
    enum:
      - BLE
      - commonDoor
      - touch
  UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataProfilesItem:
    properties:
      visionline_door_profile_id: string
      visionline_door_profile_type: >-
        UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataProfilesItemVisionlineDoorProfileType
  UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadata:
    properties:
      door_name: string
      door_category: >-
        UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataDoorCategory
      profiles: >-
        optional<list<UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadataProfilesItem>>
  UsersListAccessibleEntrancesResponseAcsEntrancesItem:
    properties:
      acs_entrance_id: string
      display_name: string
      acs_system_id: string
      created_at: datetime
      visionline_metadata: >-
        optional<UsersListAccessibleEntrancesResponseAcsEntrancesItemVisionlineMetadata>
  UsersListAccessibleEntrancesResponse:
    properties:
      acs_entrances: list<UsersListAccessibleEntrancesResponseAcsEntrancesItem>
      ok: boolean
  UsersRemoveFromAccessGroupResponse:
    properties:
      ok: boolean
  UsersRevokeAccessToAllEntrancesResponse:
    properties:
      ok: boolean
  UsersSuspendResponse:
    properties:
      ok: boolean
  UsersUnsuspendResponse:
    properties:
      ok: boolean
  UsersUpdateRequestAccessSchedule:
    properties:
      starts_at: datetime
      ends_at: datetime
  UsersUpdateResponse:
    properties:
      ok: boolean
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    add_to_access_group:
      path: /acs/users/add_to_access_group
      method: POST
      auth: true
      display-name: /acs/users/add_to_access_group
      request:
        name: UsersAddToAccessGroupRequest
        body:
          properties:
            acs_user_id: string
            acs_access_group_id: string
      response:
        docs: OK
        type: UsersAddToAccessGroupResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
            acs_access_group_id: acs_access_group_id
          response:
            body:
              ok: true
    create:
      path: /acs/users/create
      method: POST
      auth: true
      display-name: /acs/users/create
      request:
        name: UsersCreateRequest
        body:
          properties:
            acs_system_id: string
            acs_access_group_ids: optional<list<string>>
            user_identity_id: optional<string>
            access_schedule: optional<UsersCreateRequestAccessSchedule>
            full_name: optional<string>
            email:
              docs: 'Deprecated: use email_address.'
              type: optional<string>
            phone_number: optional<string>
            email_address: optional<string>
      response:
        docs: OK
        type: UsersCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_system_id: acs_system_id
          response:
            body:
              acs_user:
                acs_user_id: acs_user_id
                acs_system_id: acs_system_id
                hid_acs_system_id: hid_acs_system_id
                workspace_id: workspace_id
                created_at: '2024-01-15T09:30:00Z'
                display_name: display_name
                external_type: pti_user
                external_type_display_name: external_type_display_name
                is_suspended: true
                access_schedule:
                  starts_at: '2024-01-15T09:30:00Z'
                  ends_at: '2024-01-15T09:30:00Z'
                user_identity_id: user_identity_id
                user_identity_email_address: user_identity_email_address
                user_identity_phone_number: user_identity_phone_number
                full_name: full_name
                email: email
                email_address: email_address
                phone_number: phone_number
              ok: true
    delete:
      path: /acs/users/delete
      method: POST
      auth: true
      display-name: /acs/users/delete
      request:
        name: UsersDeleteRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              ok: true
    get:
      path: /acs/users/get
      method: POST
      auth: true
      display-name: /acs/users/get
      request:
        name: UsersGetRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              acs_user:
                acs_user_id: acs_user_id
                acs_system_id: acs_system_id
                hid_acs_system_id: hid_acs_system_id
                workspace_id: workspace_id
                created_at: '2024-01-15T09:30:00Z'
                display_name: display_name
                external_type: pti_user
                external_type_display_name: external_type_display_name
                is_suspended: true
                access_schedule:
                  starts_at: '2024-01-15T09:30:00Z'
                  ends_at: '2024-01-15T09:30:00Z'
                user_identity_id: user_identity_id
                user_identity_email_address: user_identity_email_address
                user_identity_phone_number: user_identity_phone_number
                full_name: full_name
                email: email
                email_address: email_address
                phone_number: phone_number
              ok: true
    list:
      path: /acs/users/list
      method: POST
      auth: true
      display-name: /acs/users/list
      request:
        name: UsersListRequest
        body:
          properties:
            user_identity_id: optional<string>
            user_identity_phone_number: optional<string>
            user_identity_email_address: optional<string>
            acs_system_id: optional<string>
      response:
        docs: OK
        type: UsersListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request: {}
          response:
            body:
              acs_users:
                - acs_user_id: acs_user_id
                  acs_system_id: acs_system_id
                  hid_acs_system_id: hid_acs_system_id
                  workspace_id: workspace_id
                  created_at: '2024-01-15T09:30:00Z'
                  display_name: display_name
                  external_type: pti_user
                  external_type_display_name: external_type_display_name
                  is_suspended: true
                  access_schedule:
                    starts_at: '2024-01-15T09:30:00Z'
                    ends_at: '2024-01-15T09:30:00Z'
                  user_identity_id: user_identity_id
                  user_identity_email_address: user_identity_email_address
                  user_identity_phone_number: user_identity_phone_number
                  full_name: full_name
                  email: email
                  email_address: email_address
                  phone_number: phone_number
              ok: true
    list_accessible_entrances:
      path: /acs/users/list_accessible_entrances
      method: POST
      auth: true
      display-name: /acs/users/list_accessible_entrances
      request:
        name: UsersListAccessibleEntrancesRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersListAccessibleEntrancesResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              acs_entrances:
                - acs_entrance_id: acs_entrance_id
                  display_name: display_name
                  acs_system_id: acs_system_id
                  created_at: '2024-01-15T09:30:00Z'
                  visionline_metadata:
                    door_name: door_name
                    door_category: entrance
              ok: true
    remove_from_access_group:
      path: /acs/users/remove_from_access_group
      method: POST
      auth: true
      display-name: /acs/users/remove_from_access_group
      request:
        name: UsersRemoveFromAccessGroupRequest
        body:
          properties:
            acs_user_id: string
            acs_access_group_id: string
      response:
        docs: OK
        type: UsersRemoveFromAccessGroupResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
            acs_access_group_id: acs_access_group_id
          response:
            body:
              ok: true
    revoke_access_to_all_entrances:
      path: /acs/users/revoke_access_to_all_entrances
      method: POST
      auth: true
      display-name: /acs/users/revoke_access_to_all_entrances
      request:
        name: UsersRevokeAccessToAllEntrancesRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersRevokeAccessToAllEntrancesResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              ok: true
    suspend:
      path: /acs/users/suspend
      method: POST
      auth: true
      display-name: /acs/users/suspend
      request:
        name: UsersSuspendRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersSuspendResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              ok: true
    unsuspend:
      path: /acs/users/unsuspend
      method: POST
      auth: true
      display-name: /acs/users/unsuspend
      request:
        name: UsersUnsuspendRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersUnsuspendResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              ok: true
    update:
      path: /acs/users/update
      method: POST
      auth: true
      display-name: /acs/users/update
      request:
        name: UsersUpdateRequest
        body:
          properties:
            access_schedule: optional<UsersUpdateRequestAccessSchedule>
            acs_user_id: string
            full_name: optional<string>
            email:
              docs: 'Deprecated: use email_address.'
              type: optional<string>
            phone_number: optional<string>
            email_address: optional<string>
            hid_acs_system_id: optional<string>
      response:
        docs: OK
        type: UsersUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            acs_user_id: acs_user_id
          response:
            body:
              ok: true
