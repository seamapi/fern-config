imports:
  root: __package__.yml
types:
  AcceptedProvider:
    enum:
      - akuvox
      - august
      - avigilon_alta
      - brivo
      - butterflymx
      - schlage
      - smartthings
      - yale
      - genie
      - doorking
      - salto
      - lockly
      - ttlock
      - linear
      - noiseaware
      - nuki
      - seam_relay_admin
      - igloo
      - kwikset
      - minut
      - my_2n
      - controlbyweb
      - nest
      - igloohome
      - ecobee
      - hubitat
      - four_suites
      - dormakaba_oracode
      - pti
      - wyze
      - seam_passport
      - visionline
      - assa_abloy_credential_service
      - seam_bridge
      - tedee
      - honeywell_resideo
      - latch
      - yale_access
      - hid_cm
      - google_nest
  ConnectWebviewsCreateRequestCustomMetadataValue:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 500
      - boolean
      - type: optional<string>
        validation:
          format: 'null'
  ConnectWebviewsCreateResponse:
    properties:
      connect_webview: root.ConnectWebview
      ok: boolean
  ConnectWebviewsDeleteResponse:
    properties:
      ok: boolean
  ConnectWebviewsGetResponse:
    properties:
      connect_webview: root.ConnectWebview
      ok: boolean
  ConnectWebviewsListRequestCustomMetadataHasValue:
    discriminated: false
    union:
      - string
      - boolean
  ConnectWebviewsListResponse:
    properties:
      connect_webviews: list<root.ConnectWebview>
      ok: boolean
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /connect_webviews/create
      method: POST
      auth: true
      display-name: /connect_webviews/create
      request:
        name: ConnectWebviewsCreateRequest
        body:
          properties:
            device_selection_mode: optional<root.SelectionMode>
            custom_redirect_url: optional<string>
            custom_redirect_failure_url: optional<string>
            accepted_providers: optional<list<AcceptedProvider>>
            provider_category: optional<root.ProviderCategory>
            custom_metadata: >-
              optional<map<string,
              optional<ConnectWebviewsCreateRequestCustomMetadataValue>>>
            automatically_manage_new_devices:
              type: optional<boolean>
              default: true
            wait_for_device_creation:
              type: optional<boolean>
              default: false
      response:
        docs: OK
        type: ConnectWebviewsCreateResponse
        property: connect_webview
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request: {}
          response:
            body:
              connect_webview:
                connect_webview_id: connect_webview_id
                workspace_id: workspace_id
                created_at: '2024-01-15T09:30:00Z'
                connected_account_id: connected_account_id
                url: url
                device_selection_mode: none
                accepted_providers:
                  - accepted_providers
                accepted_devices:
                  - accepted_devices
                any_device_allowed: true
                any_provider_allowed: true
                login_successful: true
                status: pending
                custom_redirect_url: custom_redirect_url
                custom_redirect_failure_url: custom_redirect_failure_url
                custom_metadata:
                  custom_metadata: custom_metadata
                automatically_manage_new_devices: true
                wait_for_device_creation: true
                authorized_at: '2024-01-15T09:30:00Z'
                selected_provider: selected_provider
              ok: true
    delete:
      path: /connect_webviews/delete
      method: POST
      auth: true
      display-name: /connect_webviews/delete
      request:
        name: ConnectWebviewsDeleteRequest
        body:
          properties:
            connect_webview_id:
              type: string
              validation:
                format: uuid
      response:
        docs: OK
        type: ConnectWebviewsDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            connect_webview_id: connect_webview_id
          response:
            body:
              ok: true
    get:
      path: /connect_webviews/get
      method: POST
      auth: true
      display-name: /connect_webviews/get
      request:
        name: ConnectWebviewsGetRequest
        body:
          properties:
            connect_webview_id:
              type: string
              validation:
                format: uuid
      response:
        docs: OK
        type: ConnectWebviewsGetResponse
        property: connect_webview
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request:
            connect_webview_id: connect_webview_id
          response:
            body:
              connect_webview:
                connect_webview_id: connect_webview_id
                workspace_id: workspace_id
                created_at: '2024-01-15T09:30:00Z'
                connected_account_id: connected_account_id
                url: url
                device_selection_mode: none
                accepted_providers:
                  - accepted_providers
                accepted_devices:
                  - accepted_devices
                any_device_allowed: true
                any_provider_allowed: true
                login_successful: true
                status: pending
                custom_redirect_url: custom_redirect_url
                custom_redirect_failure_url: custom_redirect_failure_url
                custom_metadata:
                  custom_metadata: custom_metadata
                automatically_manage_new_devices: true
                wait_for_device_creation: true
                authorized_at: '2024-01-15T09:30:00Z'
                selected_provider: selected_provider
              ok: true
    list:
      path: /connect_webviews/list
      method: POST
      auth: true
      display-name: /connect_webviews/list
      request:
        name: ConnectWebviewsListRequest
        body:
          properties:
            user_identifier_key: optional<string>
            custom_metadata_has:
              type: >-
                optional<map<string,
                ConnectWebviewsListRequestCustomMetadataHasValue>>
              docs: >-
                Returns devices where the webview's custom_metadata contains all
                of the provided key/value pairs.
            limit:
              type: optional<double>
              default: 500
      response:
        docs: OK
        type: ConnectWebviewsListResponse
        property: connect_webviews
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request: {}
          response:
            body:
              connect_webviews:
                - connect_webview_id: connect_webview_id
                  workspace_id: workspace_id
                  created_at: '2024-01-15T09:30:00Z'
                  connected_account_id: connected_account_id
                  url: url
                  device_selection_mode: none
                  accepted_providers:
                    - accepted_providers
                  accepted_devices:
                    - accepted_devices
                  any_device_allowed: true
                  any_provider_allowed: true
                  login_successful: true
                  status: pending
                  custom_redirect_url: custom_redirect_url
                  custom_redirect_failure_url: custom_redirect_failure_url
                  custom_metadata:
                    custom_metadata: custom_metadata
                  automatically_manage_new_devices: true
                  wait_for_device_creation: true
                  authorized_at: '2024-01-15T09:30:00Z'
                  selected_provider: selected_provider
              ok: true
