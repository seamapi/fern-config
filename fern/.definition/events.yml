imports:
  root: __package__.yml
types:
  EventsGetResponse:
    properties:
      event: optional<root.Event>
      message: optional<string>
      ok: boolean
  EventsListRequestBetweenItem:
    discriminated: false
    union:
      - string
      - datetime
  EventsListResponse:
    properties:
      events: list<root.Event>
      ok: boolean
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /events/get
      method: POST
      auth: true
      display-name: /events/get
      request:
        name: EventsGetRequest
        body:
          properties:
            event_id:
              type: optional<string>
              validation:
                format: uuid
            event_type: optional<string>
            device_id:
              type: optional<string>
              validation:
                format: uuid
      response:
        docs: OK
        type: EventsGetResponse
        property: event
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request: {}
          response:
            body:
              event:
                event_id: event_id
                device_id: device_id
                action_attempt_id: action_attempt_id
                acs_credential_id: acs_credential_id
                acs_user_id: acs_user_id
                acs_system_id: acs_system_id
                client_session_id: client_session_id
                enrollment_automation_id: enrollment_automation_id
                event_type: event_type
                workspace_id: workspace_id
                created_at: '2024-01-15T09:30:00Z'
                occurred_at: '2024-01-15T09:30:00Z'
              message: message
              ok: true
    list:
      path: /events/list
      method: POST
      auth: true
      display-name: /events/list
      request:
        name: EventsListRequest
        body:
          properties:
            since: optional<string>
            between: optional<list<EventsListRequestBetweenItem>>
            device_id:
              type: optional<string>
              validation:
                format: uuid
            device_ids: optional<list<string>>
            access_code_id:
              type: optional<string>
              validation:
                format: uuid
            access_code_ids: optional<list<string>>
            event_type: optional<root.EventType>
            event_types: optional<list<root.EventType>>
            connected_account_id:
              type: optional<string>
              validation:
                format: uuid
            limit:
              type: optional<double>
              default: 500
      response:
        docs: OK
        type: EventsListResponse
        property: events
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
      examples:
        - request: {}
          response:
            body:
              events:
                - event_id: event_id
                  device_id: device_id
                  action_attempt_id: action_attempt_id
                  acs_credential_id: acs_credential_id
                  acs_user_id: acs_user_id
                  acs_system_id: acs_system_id
                  client_session_id: client_session_id
                  enrollment_automation_id: enrollment_automation_id
                  event_type: event_type
                  workspace_id: workspace_id
                  created_at: '2024-01-15T09:30:00Z'
                  occurred_at: '2024-01-15T09:30:00Z'
              ok: true
